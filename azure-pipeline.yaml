# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
  
pool:
  vmImage: ubuntu-latest


stages:
  - stage: Pacaking 
    pool:
      vmImage: ubuntu-latest
    jobs:
    - job: Job_1
      displayName: code_clone_scan
      steps:
      - script: echo Cloning the repo
        displayName: 'Run a one-line script'
      - checkout: self
        fetchDepth: 1
      - script: echo Scanning the code
      - task: UsePythonVersion@0  # Select Python version
        inputs:
          versionSpec: '3.x'
        displayName: 'Use Python 3.x'

      - script: |
          python -m venv venv  # Create virtual environment
          source venv/bin/activate
          pip install -r requirements.txt
        displayName: 'Install Python dependencies'

      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'SonarCloud'  # Name of the service connection to SonarCloud
          organization: 'tg-vishwa-aug24'  # Replace with your SonarCloud organization
          scannerMode: 'CLI'
          configMode: 'manual'
          cliProjectKey: 'tg-vishwa-aug24'  # Replace with your SonarCloud project key
          cliSources: '.'
      - task: SonarCloudAnalyze@1
        displayName: 'Run SonarCloud analysis'
      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'  # Adjust based on your build times
        displayName: 'Publish SonarCloud results'