# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main
  
pool:
  vmImage: ubuntu-latest

variables:
  imageName: 'webapp'  
  imageTag: '$(Build.BuildId)'

stages:
  - stage: Pacaking 
    pool:
      vmImage: ubuntu-latest
    jobs:
    - job: Job_1
      displayName: code_clone_scan
      steps:
      - script: echo Cloning the repo
        displayName: 'Run a one-line script'
      - checkout: self
        fetchDepth: 1
      - script: echo Scanning the code
      - task: UsePythonVersion@0  # Select Python version
        inputs:
          versionSpec: '3.x'
        displayName: 'Use Python 3.x'

      - script: |
          python -m venv venv  # Create virtual environment
          source venv/bin/activate
          pip install -r requirements.txt
        displayName: 'Install Python dependencies'

      - script: |
          sudo apt-get update
          sudo apt-get install openjdk-17-jdk -y
          sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/java-17-openjdk-amd64/bin/java 1
          sudo update-alternatives --set java /usr/lib/jvm/java-17-openjdk-amd64/bin/java
          java -version  # Verify Java installation
        displayName: 'Install and Configure Java 17'

      - script: |
          wget -O sonar-scanner-cli.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli.zip
          export PATH=$PATH:$(pwd)/sonar-scanner-4.8.0.2856-linux/bin
          ls -l $(pwd)/sonar-scanner-4.8.0.2856-linux/bin/sonar-scanner
        displayName: 'Install SonarScanner CLI'

      - script: |
          $(pwd)/sonar-scanner-4.8.0.2856-linux/bin/sonar-scanner -Dsonar.projectKey=tg-vishwa-aug24 -Dsonar.organization=tg-vishwa-aug24 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$(SONAR_TOKEN) -Dsonar.python.version=3.x  # Replace with the Python version you use
        displayName: 'Run SonarScanner CLI'
        env:
          SONAR_TOKEN: $(SONAR_TOKEN)


    - job: Job_2
      displayName: create&scan_image
      steps:
      - script: echo Cloning the repo
        displayName: 'Run a one-line script'
      - checkout: self
        fetchDepth: 1

        # Build Docker Image
      - task: Docker@2
        displayName: 'Build Docker Image'
        inputs:
          command: build
          repository: '$(imageName)'
          tags: '$(imageTag)'

          # Install Trivy
      - script: |
          sudo apt-get install wget -y
          wget https://github.com/aquasecurity/trivy/releases/download/v0.41.0/trivy_0.41.0_Linux-64bit.deb
          sudo dpkg -i trivy_0.41.0_Linux-64bit.deb
        displayName: 'Install Trivy'

          # Scan the Docker image
      - script: |
          trivy image --exit-code 1 $(imageName):$(imageTag)
        displayName: 'Scan Docker Image'

      - task: Docker@2
        displayName: 'Login to Docker Hub'
        inputs:
          command: login
          containerRegistry: 'acr-private1'